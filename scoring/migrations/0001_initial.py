# Generated by Django 4.2.4 on 2023-11-02 09:38

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='CardImages',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('card_number', models.CharField(max_length=5, null=True)),
                ('section', models.CharField(max_length=3, null=True)),
                ('img_file', models.FileField(blank=True, upload_to='images/card')),
                ('detail_img', models.FileField(blank=True, upload_to='images/location')),
            ],
        ),
        migrations.CreateModel(
            name='client',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, verbose_name='이름')),
                ('gender', models.CharField(choices=[('M', '남성'), ('F', '여성'), ('O', '기타')], max_length=1, verbose_name='성별')),
                ('birthdate', models.DateField(verbose_name='생년월일')),
                ('testDate', models.DateField(verbose_name='검사일')),
                ('notes', models.TextField(blank=True, verbose_name='비고')),
                ('tester', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='검사자')),
            ],
        ),
        migrations.CreateModel(
            name='DataTable',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('column1', models.CharField(max_length=100)),
                ('column2', models.TextField(max_length=100)),
                ('column3', models.CharField(max_length=100)),
                ('column4', models.CharField(max_length=100)),
                ('column5', models.CharField(max_length=100)),
                ('column6', models.CharField(max_length=100)),
                ('column7', models.CharField(max_length=100)),
                ('column8', models.CharField(max_length=100)),
                ('column9', models.CharField(max_length=100)),
                ('column10', models.CharField(max_length=100)),
                ('column11', models.CharField(max_length=100)),
                ('column12', models.CharField(max_length=100)),
                ('column13', models.CharField(max_length=100)),
                ('column14', models.CharField(max_length=100)),
                ('column15', models.CharField(max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name='PopularResponse',
            fields=[
                ('id', models.CharField(max_length=10, primary_key=True, serialize=False)),
                ('card_number', models.CharField(max_length=5, null=True)),
                ('p', models.CharField(max_length=200, null=True)),
                ('Z', models.CharField(max_length=50, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='SearchReference',
            fields=[
                ('id', models.CharField(max_length=100, primary_key=True, serialize=False)),
                ('Card', models.CharField(max_length=5, null=True)),
                ('LOC', models.CharField(max_length=5, null=True)),
                ('Cont', models.CharField(max_length=7, null=True)),
                ('FQ', models.CharField(blank=True, max_length=1, null=True)),
                ('Determinants', models.CharField(max_length=200, null=True)),
                ('Item', models.CharField(max_length=200, null=True)),
                ('V', models.CharField(blank=True, max_length=1, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='StructuralSummary',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('M', models.PositiveIntegerField(db_column='M', null=True, verbose_name='M')),
                ('FM', models.PositiveIntegerField(null=True, verbose_name='FM')),
                ('m_l', models.PositiveIntegerField(db_column='m_l', null=True, verbose_name="m'")),
                ('FC', models.PositiveIntegerField(null=True, verbose_name='FC')),
                ('CF', models.PositiveIntegerField(null=True, verbose_name='CF')),
                ('C', models.PositiveIntegerField(blank=True, null=True, verbose_name='C')),
                ('Cn', models.PositiveIntegerField(null=True, verbose_name='Cn')),
                ('FCa', models.PositiveIntegerField(null=True, verbose_name="FC'")),
                ('CaF', models.PositiveIntegerField(null=True, verbose_name="C'F")),
                ('Ca', models.PositiveIntegerField(null=True, verbose_name="C'")),
                ('FT', models.PositiveIntegerField(null=True, verbose_name='FT')),
                ('TF', models.PositiveIntegerField(null=True, verbose_name='TF')),
                ('T', models.PositiveIntegerField(null=True, verbose_name='T')),
                ('FV', models.PositiveIntegerField(null=True, verbose_name='FV')),
                ('VF', models.PositiveIntegerField(null=True, verbose_name='VF')),
                ('V', models.PositiveIntegerField(null=True, verbose_name='V')),
                ('FY', models.PositiveIntegerField(null=True, verbose_name='FY')),
                ('YF', models.PositiveIntegerField(null=True, verbose_name='YF')),
                ('Y', models.PositiveIntegerField(null=True, verbose_name='Y')),
                ('Fr', models.PositiveIntegerField(null=True, verbose_name='Fr')),
                ('rF', models.PositiveIntegerField(null=True, verbose_name='rF')),
                ('FD', models.PositiveIntegerField(null=True, verbose_name='FD')),
                ('F', models.PositiveIntegerField(null=True, verbose_name='F')),
                ('pair', models.PositiveIntegerField(null=True, verbose_name='(2)')),
                ('blends', models.CharField(default='', max_length=100)),
                ('H', models.PositiveIntegerField(default=0, verbose_name='H')),
                ('H_paren', models.PositiveIntegerField(default=0, verbose_name='(H)')),
                ('Hd', models.PositiveIntegerField(default=0, verbose_name='Hd')),
                ('Hd_paren', models.PositiveIntegerField(default=0, verbose_name='(Hd)')),
                ('Hx', models.PositiveIntegerField(default=0, verbose_name='Hx')),
                ('A', models.PositiveIntegerField(default=0, verbose_name='A')),
                ('A_paren', models.PositiveIntegerField(default=0, verbose_name='(A)')),
                ('Ad', models.PositiveIntegerField(default=0, verbose_name='Ad')),
                ('Ad_paren', models.PositiveIntegerField(default=0, verbose_name='(Ad)')),
                ('An', models.PositiveIntegerField(default=0, verbose_name='An')),
                ('Art', models.PositiveIntegerField(default=0, verbose_name='Art')),
                ('Ay', models.PositiveIntegerField(default=0, verbose_name='Ay')),
                ('Bl', models.PositiveIntegerField(default=0, verbose_name='Bl')),
                ('Bt', models.PositiveIntegerField(default=0, verbose_name='Bt')),
                ('Cg', models.PositiveIntegerField(default=0, verbose_name='Cg')),
                ('Cl', models.PositiveIntegerField(default=0, verbose_name='Cl')),
                ('Ex', models.PositiveIntegerField(default=0, verbose_name='Ex')),
                ('Fd_l', models.PositiveIntegerField(default=0, verbose_name='Fd_l')),
                ('Fi', models.PositiveIntegerField(default=0, verbose_name='Fi')),
                ('Ge', models.PositiveIntegerField(default=0, verbose_name='Ge')),
                ('Hh', models.PositiveIntegerField(default=0, verbose_name='Hh')),
                ('Ls', models.PositiveIntegerField(default=0, verbose_name='Ls')),
                ('Na', models.PositiveIntegerField(default=0, verbose_name='Na')),
                ('Sc', models.PositiveIntegerField(default=0, verbose_name='Sc')),
                ('Sx', models.PositiveIntegerField(default=0, verbose_name='Sx')),
                ('Xy', models.PositiveIntegerField(default=0, verbose_name='Xy')),
                ('Idio', models.PositiveIntegerField(default=0, verbose_name='Id')),
                ('left_eb', models.IntegerField(verbose_name='eb좌항')),
                ('R', models.FloatField(verbose_name='반응수')),
                ('client', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='scoring.client', verbose_name='수검자')),
            ],
        ),
        migrations.CreateModel(
            name='ResponseCode',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('card', models.CharField(max_length=5, verbose_name='카드번호')),
                ('response_num', models.IntegerField(verbose_name='반응번호')),
                ('time', models.CharField(max_length=100, verbose_name='반응시간')),
                ('response', models.TextField(verbose_name='반응내용')),
                ('rotation', models.CharField(max_length=1, verbose_name='카드방향')),
                ('inquiry', models.TextField(verbose_name='질문')),
                ('location', models.CharField(max_length=5, verbose_name='반응영역')),
                ('loc_num', models.IntegerField(verbose_name='영역번호')),
                ('dev_qual', models.CharField(max_length=5, verbose_name='발달질')),
                ('determinants', models.CharField(max_length=30, verbose_name='결정인')),
                ('pair', models.CharField(max_length=20, verbose_name='쌍/반사반응')),
                ('form_qual', models.CharField(max_length=2, verbose_name='형태질')),
                ('content', models.CharField(max_length=30, verbose_name='내용인')),
                ('popular', models.CharField(max_length=1, verbose_name='평범반응')),
                ('Z', models.CharField(max_length=5, verbose_name='조직화 점수')),
                ('special', models.CharField(max_length=50, verbose_name='특수점수')),
                ('comment', models.TextField(verbose_name='코멘트')),
                ('client', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='responses', to='scoring.client', verbose_name='수검자')),
            ],
        ),
    ]
